@@@3	0	Key	data		data
@@@3	5	Key	class		class
@@@3	11	Word	Item		Item
@@@3	15	Br	(		(
@@@3	16	Key	val		val
@@@3	20	Word	name		name
@@@3	24	Op	:		:
@@@3	26	Word	String		String
@@@3	32	Op	,		,
@@@3	34	Key	val		val
@@@3	38	Word	price		price
@@@3	43	Op	:		:
@@@3	45	Word	Float		Float
@@@3	50	Br	)		)
@@@5	0	Key	data		data
@@@5	5	Key	class		class
@@@5	11	Word	Order		Order
@@@5	16	Br	(		(
@@@5	17	Key	val		val
@@@5	21	Word	items		items
@@@5	26	Op	:		:
@@@5	28	Word	Collection	Collection
@@@5	38	Op	<		<
@@@5	39	Word	Item		Item
@@@5	43	Op	>		>
@@@5	44	Br	)		)
@@@7	0	Key	fun		fun
@@@7	4	Word	Order		Order
@@@7	9	Op	.		.
@@@7	10	Word	maxPricedItemValue	maxPricedItemValue
@@@7	28	Br	(		(
@@@7	29	Br	)		)
@@@7	30	Op	:		:
@@@7	32	Word	Float		Float
@@@7	38	Op	=		=
@@@7	40	Key	this		this
@@@7	44	Op	.		.
@@@7	45	Word	items		items
@@@7	50	Op	.		.
@@@7	51	Word	maxByOrNull	maxByOrNull
@@@7	63	Br	{		{
@@@7	65	Word	it		it
@@@7	67	Op	.		.
@@@7	68	Word	price		price
@@@7	74	Br	}		}
@@@7	75	Op	?		?
@@@7	76	Op	.		.
@@@7	77	Word	price		price
@@@7	83	Op	?		?
@@@7	84	Op	:		:
@@@7	86	Float	0F		0
@@@8	0	Key	fun		fun
@@@8	4	Word	Order		Order
@@@8	9	Op	.		.
@@@8	10	Word	maxPricedItemName	maxPricedItemName
@@@8	27	Br	(		(
@@@8	28	Br	)		)
@@@8	30	Op	=		=
@@@8	32	Key	this		this
@@@8	36	Op	.		.
@@@8	37	Word	items		items
@@@8	42	Op	.		.
@@@8	43	Word	maxByOrNull	maxByOrNull
@@@8	55	Br	{		{
@@@8	57	Word	it		it
@@@8	59	Op	.		.
@@@8	60	Word	price		price
@@@8	66	Br	}		}
@@@8	67	Op	?		?
@@@8	68	Op	.		.
@@@8	69	Word	name		name
@@@8	74	Op	?		?
@@@8	75	Op	:		:
@@@8	77	Str	"NO_PRODUCTS"	NO_PRODUCTS
@@@10	0	Key	val		val
@@@10	4	Word	Order		Order
@@@10	9	Op	.		.
@@@10	10	Word	commaDelimitedItemNames	commaDelimitedItemNames
@@@10	33	Op	:		:
@@@10	35	Word	String		String
@@@11	4	Key	get		get
@@@11	7	Br	(		(
@@@11	8	Br	)		)
@@@11	10	Op	=		=
@@@11	12	Word	items		items
@@@11	17	Op	.		.
@@@11	18	Word	map		map
@@@11	22	Br	{		{
@@@11	24	Word	it		it
@@@11	26	Op	.		.
@@@11	27	Word	name		name
@@@11	32	Br	}		}
@@@11	33	Op	.		.
@@@11	34	Word	joinToString	joinToString
@@@11	46	Br	(		(
@@@11	47	Br	)		)
@@@13	0	Key	fun		fun
@@@13	4	Word	main		main
@@@13	8	Br	(		(
@@@13	9	Br	)		)
@@@13	11	Br	{		{
@@@15	4	Key	val		val
@@@15	8	Word	order		order
@@@15	14	Op	=		=
@@@15	16	Word	Order		Order
@@@15	21	Br	(		(
@@@15	22	Word	listOf		listOf
@@@15	28	Br	(		(
@@@15	29	Word	Item		Item
@@@15	33	Br	(		(
@@@15	34	Str	"Bread"		Bread
@@@15	41	Op	,		,
@@@15	43	Float	25.0F		25
@@@15	48	Br	)		)
@@@15	49	Op	,		,
@@@15	51	Word	Item		Item
@@@15	55	Br	(		(
@@@15	56	Str	"Wine"		Wine
@@@15	62	Op	,		,
@@@15	64	Float	29.0F		29
@@@15	69	Br	)		)
@@@15	70	Op	,		,
@@@15	72	Word	Item		Item
@@@15	76	Br	(		(
@@@15	77	Str	"Water"		Water
@@@15	84	Op	,		,
@@@15	86	Float	12.0F		12
@@@15	91	Br	)		)
@@@15	92	Br	)		)
@@@15	93	Br	)		)
@@@17	4	Word	println		println
@@@17	11	Br	(		(
@@@17	12	Str	"Max priced item name: 	Max priced item name: 
@@@17	35	StrExp	${		${
@@@17	37	Word	order		order
@@@17	42	Op	.		.
@@@17	43	Word	maxPricedItemName	maxPricedItemName
@@@17	60	Br	(		(
@@@17	61	Br	)		)
@@@17	62	Br	}		}
@@@17	63	Str	"		
@@@17	64	Br	)		)
@@@18	4	Word	println		println
@@@18	11	Br	(		(
@@@18	12	Str	"Max priced item value: 	Max priced item value: 
@@@18	36	StrExp	${		${
@@@18	38	Word	order		order
@@@18	43	Op	.		.
@@@18	44	Word	maxPricedItemValue	maxPricedItemValue
@@@18	62	Br	(		(
@@@18	63	Br	)		)
@@@18	64	Br	}		}
@@@18	65	Str	"		
@@@18	66	Br	)		)
@@@19	4	Word	println		println
@@@19	11	Br	(		(
@@@19	12	Str	"Items: 	Items: 
@@@19	20	StrExp	${		${
@@@19	22	Word	order		order
@@@19	27	Op	.		.
@@@19	28	Word	commaDelimitedItemNames	commaDelimitedItemNames
@@@19	51	Br	}		}
@@@19	52	Str	"		
@@@19	53	Br	)		)
@@@21	0	Br	}		}
